body{
    overflow-x: hidden;
}

.container {
    width: 1200px;
    margin: 60px auto;
    display: flex;
    flex-direction: column;
    gap: 20px;
    height: auto;
    font-family: 'Oswald' !important;
}

.card {
    border-radius: 20px;
    margin: 30px;
    display: flex;
    gap: 20px;
    padding: 30px;
}

.card img {
    width: 300px;
    display: inline;
    margin: 20px;
}

.seprater {
    width: 1200px;
    background-color: rgb(112, 111, 111);
    height: 2px;
}

.title {
    font-size: 48px;
}

.main-info {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: top;
}

.publisher {
    font-size: 18px;
}

.author {
    font-size: 36px;
}

.desc {
    text-align: justify;
}

.extra-info {
    margin-top: 20px;
    display: flex;
    justify-content: space-between;
}

.filters {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: top;
    padding: 0px 20px;
    margin: auto;
    font-size: 18px;
}

.filter-type {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: 40px;
}

.search-bar {
    height: 40px;
    border-radius: 20px;
    border: 1px solid black;
    background-color: var(--primary-color);
    width: 200px;
    padding: 0px 20px;
    font-size: 18px;
}

.search-bar:focus {
    border: none;
    box-shadow: 0 0 10px var(--primary-button-color);
}

.search-button:hover {
    scale: 1.1;
    transition: scale 0.2s ease-in-out;
}

.search-bar svg {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.search-button {
    border-radius: 50%;
    width: 40px;
    height: 40px;
    border: 1px solid black;
}

.caret {
    position: relative;
    top: 2px;
}

.drop-down {
    background-color: var(--secondary-button-color);
    border-radius: 5px;
    border: 1px solid black;
    padding: 1px 15px;
    text-align: center;
    position: relative;
    cursor: pointer;
    user-select: none;
}


.drop-down label {
    display: block;
    border-top: 1px dashed black;
    cursor: pointer;
}

.drop-down input {
    display: none;
}

.card img {
    border-radius: 5px;
    border: 1px solid black;
    width: 300px;
    height: 400px;
}

.drop-down {
    max-height: 25px;
    overflow: hidden;
    transition: max-height 1s ease;
}

.open {
    max-height: 500px;
    transition: max-height 2s ease-in-out;
}

.active {
    color: var(--primary-color);
}

.image-not-found {
    display: none;
}

.search-bar:focus {
    text-decoration-thickness: 2px;
    text-decoration-color: black;
    transition: text-decoration-color 0.2s ease-in-out;
}

.search-bar:focus-visible {
    border: none;
    outline: none;
}

.change-page {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: 100%;
    gap: 20px;
    margin: auto;
}

.page {
    padding: 5px 10px;
    border: 2px solid orange;
    text-align: center;
}

.left {
    transform: rotate(90deg);
}

.right {
    transform: rotate(-90deg);
}

.selected-page {
    background-color: orange;
    color: white;
}

.disabled {
    display: none;
}

button .book {
    width: 24px;
    height: 24px;
    border: none;
}

.read-button {
    font-size: 24px;
    padding: 0px 15px;
    background-color: var(--primary-button-color);
    display: flex;
    align-items: center;
    width: inherit;
    margin: 3px;
    margin-top: calc(40px + 3px);
    text-decoration: none;
    color: var(--primary-color);
    border-radius: 8px;
    border: none;
    position: relative;
    transition: background-color 0.2s ease-out;
}

.read-button::after {
    content: "";
    width: calc(100% + 8px);
    height: calc(100% + 8px);
    z-index: -1;
    background: linear-gradient(45deg,
    rgb(0, 153, 255),
    rgb(0, 128, 230),
    rgb(0, 77, 179),
    rgb(16, 78, 139)
);



    position: absolute;
    top: -4px;
    left: -4px;
    filter: blur(6px);
    border-radius: 8px;
    background-size: 400% 100%; /* Background size */
}

.read-button:hover {
    background-color: var(--primary-button-hover-color);
    transition: background-color 0.2s ease-out;
}

.read-button-parent {
    position: relative;
    width: max-content;
}

.read-button:hover::after {
    animation: gradientAnimation 1s linear infinite; /* Apply animation on hover */
}

@keyframes gradientAnimation {
    0% { background-position: 0% 50%; } 
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
}
